要将 Poetry 安装在虚拟环境（venv）下，可以按照以下步骤操作：

1. 创建并激活虚拟环境
首先，进入项目的后端目录，创建并激活一个新的虚拟环境：
cd e:\source\ai\screenshot-to-code\backend
python -m venv .venv
# 在 Windows 上激活虚拟环境
.venv\Scripts\activate
# 在 Linux 或 macOS 上激活虚拟环境
source .venv/bin/activate

2. 在虚拟环境中安装 Poetry
激活虚拟环境后，在其中安装 Poetry：
poetry config virtualenvs.create false

3. 配置 Poetry 使用当前虚拟环境
为了确保 Poetry 使用当前激活的虚拟环境，你可以配置 Poetry 不创建新的虚拟环境

4. 使用 Poetry 安装项目依赖
在配置好 Poetry 后，你可以使用 Poetry 来安装项目的依赖：
poetry install




要运行这个项目，你可以按照以下步骤进行操作：

环境准备
确保你已经安装了以下工具：

Poetry：用于后端的包管理。如果未安装，可以使用 pip install poetry 进行安装。
Yarn：用于前端的包管理。可以通过 npm install -g yarn 进行安装。
Docker（可选）：如果你想使用 Docker 来运行项目。

运行后端

cd backend
echo "OPENAI_API_KEY=sk-your-key" > .env
echo "ANTHROPIC_API_KEY=your-key" > .env
poetry install
poetry shell
poetry run uvicorn main:app --reload --port 7001
你也可以通过前端的设置对话框来设置 API 密钥（加载前端后点击齿轮图标）。

运行前端
cd frontend
yarn
yarn dev

使用 Docker 运行项目
如果你已经安装了 Docker，可以在项目根目录下运行以下命令：
echo "OPENAI_API_KEY=sk-your-key" > .env
docker-compose up -d --build
应用将在 http://localhost:5173 上运行。需要注意的是，使用 Docker 运行时，文件更改不会触发重新构建，因此不适合开发。


其他注意事项
若要在不同端口上运行后端，需要更新 frontend/.env.local 中的 VITE_WS_BACKEND_URL。
若不想消耗 GPT4-Vision 信用额度，可以使用模拟模式运行后端：
MOCK=true poetry run uvicorn main:app --reload --port 7001
运行成功后，打开 http://localhost:5173 即可使用该应用。
